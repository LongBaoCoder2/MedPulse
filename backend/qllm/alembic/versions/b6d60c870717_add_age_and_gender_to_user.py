"""add age and gender to user

Revision ID: b6d60c870717
Revises: 915d343103da
Create Date: 2025-02-13 15:49:18.780793

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b6d60c870717"
down_revision: Union[str, None] = "915d343103da"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("user", "email", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("user", "password_hash", existing_type=sa.VARCHAR(), nullable=True)
    op.drop_constraint("user_email_key", "user", type_="unique")
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.drop_column("user", "age")
    op.drop_column("user", "name")
    op.drop_column("user", "gender")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "user", sa.Column("gender", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "user", sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "user", sa.Column("age", sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.create_unique_constraint("user_email_key", "user", ["email"])
    op.alter_column("user", "password_hash", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("user", "email", existing_type=sa.VARCHAR(), nullable=False)
    # ### end Alembic commands ###

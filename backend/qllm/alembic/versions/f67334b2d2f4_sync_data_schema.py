"""Sync data schema

Revision ID: f67334b2d2f4
Revises: 58dc3b337ee4
Create Date: 2024-12-11 11:37:34.793603

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "f67334b2d2f4"
down_revision: Union[str, None] = "58dc3b337ee4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "document",
        sa.Column("url", sa.String(), nullable=False),
        sa.Column(
            "metadata_map", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("url"),
    )
    op.create_index(op.f("ix_document_id"), "document", ["id"], unique=False)
    op.create_table(
        "conversation",
        sa.Column("conversation_id", sa.UUID(), nullable=False),
        sa.Column("document_id", sa.UUID(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("conversation_id", "id"),
    )
    op.create_index(op.f("ix_conversation_id"), "conversation", ["id"], unique=False)
    op.create_table(
        "conversationdocument",
        sa.Column("conversation_id", sa.UUID(), nullable=True),
        sa.Column("document_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["conversation_id"],
            ["conversation.id"],
        ),
        sa.ForeignKeyConstraint(
            ["document_id"],
            ["document.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_conversationdocument_conversation_id"),
        "conversationdocument",
        ["conversation_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_conversationdocument_document_id"),
        "conversationdocument",
        ["document_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_conversationdocument_id"), "conversationdocument", ["id"], unique=False
    )
    op.create_table(
        "message",
        sa.Column("conversation_id", sa.UUID(), nullable=True),
        sa.Column("content", sa.String(), nullable=True),
        sa.Column(
            "role",
            postgresql.ENUM("USER", "ASSISTANT", name="MessageRoleEnum"),
            nullable=False,
        ),
        sa.Column(
            "status",
            postgresql.ENUM("PENDING", "SUCCESS", "ERROR", name="MessageStatusEnum"),
            nullable=False,
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["conversation_id"],
            ["conversation.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_message_conversation_id"), "message", ["conversation_id"], unique=False
    )
    op.create_index(op.f("ix_message_id"), "message", ["id"], unique=False)
    op.create_table(
        "messagesubprocess",
        sa.Column("message_id", sa.UUID(), nullable=True),
        sa.Column(
            "status",
            postgresql.ENUM("PENDING", "FINISHED", name="MessageSubProcessStatusEnum"),
            nullable=False,
        ),
        sa.Column(
            "metadata_map", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["message_id"],
            ["message.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_messagesubprocess_id"), "messagesubprocess", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_messagesubprocess_message_id"),
        "messagesubprocess",
        ["message_id"],
        unique=False,
    )
    op.drop_index("ix_conversations_id", table_name="conversations")
    op.drop_table("conversations")
    op.create_unique_constraint(
        "unique_user_file", "medical_records", ["user_id", "file_path"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("unique_user_file", "medical_records", type_="unique")
    op.create_table(
        "conversations",
        sa.Column("title", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "messages",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="conversations_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="conversations_pkey"),
    )
    op.create_index("ix_conversations_id", "conversations", ["id"], unique=False)
    op.drop_index(
        op.f("ix_messagesubprocess_message_id"), table_name="messagesubprocess"
    )
    op.drop_index(op.f("ix_messagesubprocess_id"), table_name="messagesubprocess")
    op.drop_table("messagesubprocess")
    op.drop_index(op.f("ix_message_id"), table_name="message")
    op.drop_index(op.f("ix_message_conversation_id"), table_name="message")
    op.drop_table("message")
    op.drop_index(op.f("ix_conversationdocument_id"), table_name="conversationdocument")
    op.drop_index(
        op.f("ix_conversationdocument_document_id"), table_name="conversationdocument"
    )
    op.drop_index(
        op.f("ix_conversationdocument_conversation_id"),
        table_name="conversationdocument",
    )
    op.drop_table("conversationdocument")
    op.drop_index(op.f("ix_conversation_id"), table_name="conversation")
    op.drop_table("conversation")
    op.drop_index(op.f("ix_document_id"), table_name="document")
    op.drop_table("document")
    # ### end Alembic commands ###

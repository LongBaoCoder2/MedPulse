"""empty message

Revision ID: dd225c9b9e5f
Revises: b6d60c870717
Create Date: 2025-02-14 16:59:21.890294

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "dd225c9b9e5f"
down_revision: Union[str, None] = "b6d60c870717"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "medicalrecord",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("file_name", sa.String(length=255), nullable=False),
        sa.Column("file_path", sa.Text(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_medicalrecord_id"), "medicalrecord", ["id"], unique=False)
    op.create_table(
        "memory",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column(
            "type",
            postgresql.ENUM("EPISODIC", "SEMANTIC", "PROCEDURAL", name="MemoryType"),
            nullable=False,
        ),
        sa.Column("content", sa.JSON(), nullable=False),
        sa.Column("meta_data", sa.JSON(), nullable=True),
        sa.Column("embedding", sa.JSON(), nullable=True),
        sa.Column("importance_score", sa.Float(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "memoryindex",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column(
            "memory_type",
            postgresql.ENUM("EPISODIC", "SEMANTIC", "PROCEDURAL", name="MemoryType"),
            nullable=False,
        ),
        sa.Column("index_data", sa.JSON(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_memoryindex_id"), "memoryindex", ["id"], unique=False)
    op.drop_index("ix_medical_records_id", table_name="medical_records")
    op.drop_table("medical_records")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "medical_records",
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "file_name", sa.VARCHAR(length=255), autoincrement=False, nullable=False
        ),
        sa.Column("file_path", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name="medical_records_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="medical_records_pkey"),
    )
    op.create_index("ix_medical_records_id", "medical_records", ["id"], unique=False)
    op.drop_index(op.f("ix_memoryindex_id"), table_name="memoryindex")
    op.drop_table("memoryindex")
    op.drop_table("memory")
    op.drop_index(op.f("ix_medicalrecord_id"), table_name="medicalrecord")
    op.drop_table("medicalrecord")
    # ### end Alembic commands ###
